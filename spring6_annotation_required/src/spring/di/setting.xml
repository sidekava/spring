<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    <!-- 객체들이 annotation을 갖고 있다는 뜻으로 anntation을 사용할 때 사용 -->
    <context:annotation-config />  
	<!-- Exam exam = new NewlecExam(); -->
	<!-- NewlecExam(int kor, int eng, int math, int com) -->
<!-- 	 <bean id="exam1" class="spring.di.entity.NewlecExam" p:kor="10" p:eng="10" />
	 <bean id="exam2" class="spring.di.entity.NewlecExam" p:kor="20" p:eng="20" /> -->
	 	<!-- autowired가 선언된 setter가 bean을 찾는 방법.
	 		1. bean의 클래스가 setter의 입력자료형으로 찾는다.
	 		2. 입력자료형만으로는 bean을 확정하지 못할땐 변수명으로 찾는다.
	 		3. 그럴땐 Qualifier annotation을 사용하여 bean을 지정해준다.
	 	-->
	
	<!-- ExamConsole console = new InlineExamConsole(); -->
	<bean id="console" class="spring.di.ui.InlineExamConsole">
		<!-- console.setExam(exam); -->
		<!-- <property name="exam" ref="exam"/> -->
		<!-- property(setter)를 없애고 annotation으로 대체 
		bean을 읽으면서 객체가 만들어진다. 객체가 만들어지면 그 객체에서 Autowired를 찾고 있으면 setting을 해준다.-->
	</bean>
	
</beans>